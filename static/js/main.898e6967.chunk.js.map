{"version":3,"sources":["components/FilterBox.js","components/PokeCard.js","components/Gallery.js","assets/poketitle.png","components/Header.js","components/Footer.js","App.js","index.js"],"names":["FilterBox","handleClick","useState","types","setTypes","useEffect","a","fetch","res","json","filteredTypes","results","filter","el","name","fetchTypes","className","length","map","type","onClick","charAt","slice","PokeCard","pokemon","src","sprites","other","front_default","alt","toUpperCase","Gallery","isLoaded","setIsLoaded","setFilter","data","setData","pokemons","setPokemons","res1","json1","Promise","all","url","res2","juarez","fetchData","includes","filteredData","e","target","document","querySelectorAll","forEach","classList","add","contains","remove","some","id","Header","styleBtnUp","setStyleBtnUp","window","addEventListener","scrollY","poketitle","style","display","scrollTo","Footer","href","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.898e6967.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst FilterBox = ({ handleClick }) => {\r\n  const [types, setTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTypes = async () => {\r\n      const res = await fetch(\"https://pokeapi.co/api/v2/type\");\r\n      const json = await res.json();\r\n      const filteredTypes = json.results.filter(\r\n        (el) => el.name !== \"unknown\" && el.name !== \"shadow\"\r\n      );\r\n      setTypes(filteredTypes);\r\n    };\r\n    fetchTypes();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filters-btns\">\r\n        {types.length > 0 ? (\r\n          types.map((type) => (\r\n            <button\r\n              key={type.name}\r\n              className={`type-btn type-unselected ${type.name}`}\r\n              name={type.name}\r\n              onClick={handleClick}\r\n            >\r\n              {type.name.charAt(0) + type.name.slice(1)}\r\n            </button>\r\n          ))\r\n        ) : (\r\n          <h2>Loading</h2>\r\n        )}\r\n      </div>\r\n      <button className=\"reset\" name=\"reset\" onClick={handleClick}>\r\n        reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBox;\r\n","const PokeCard = ({ pokemon }) => {\r\n  return (\r\n    <div className=\"pokecard\">\r\n      <div className=\"img-box\">\r\n        <img\r\n          src={pokemon.sprites.other[\"official-artwork\"].front_default}\r\n          alt={pokemon.name}\r\n        />\r\n      </div>\r\n      <div className=\"info-box\">\r\n        <h3>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</h3>\r\n      </div>\r\n      <div className=\"types-box\">\r\n        {pokemon.types.map((type) => (\r\n          <span className={`type ${type.type.name}`}>\r\n            {type.type.name.charAt(0).toUpperCase() + type.type.name.slice(1)}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokeCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FilterBox from \"./FilterBox\";\r\n\r\nimport PokeCard from \"./PokeCard\";\r\n\r\nconst Gallery = () => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [filter, setFilter] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoaded(false);\r\n      setData([]);\r\n      // fetch for pokemon list\r\n      const res1 = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=386\");\r\n      const json1 = await res1.json();\r\n      // fetch for every pokemon\r\n      let juarez = await Promise.all(\r\n        json1.results.map(async (el) => {\r\n          const res2 = await fetch(el.url);\r\n          return await res2.json();\r\n        })\r\n      );\r\n      setData(juarez);\r\n    };\r\n\r\n    fetchData();\r\n    setIsLoaded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filteredData = async () => {\r\n      const a = await data.filter(\r\n        (el) =>\r\n          filter.includes(el.types[0].type.name) ||\r\n          (el.types[1] && filter.includes(el.types[1].type.name))\r\n      );\r\n      setPokemons(a);\r\n    };\r\n    filteredData();\r\n  }, [filter]);\r\n\r\n  const handleClick = (e) => {\r\n    let name = e.target.name;\r\n    if (name === \"reset\") {\r\n      setFilter([]);\r\n      let typesBtns = document.querySelectorAll(\".type-btn\");\r\n      typesBtns.forEach((el) => el.classList.add(\"type-unselected\"));\r\n    } else {\r\n      e.target.classList.contains(\"type-unselected\")\r\n        ? e.target.classList.remove(\"type-unselected\")\r\n        : e.target.classList.add(\"type-unselected\");\r\n      if (filter.some((el) => name === el)) {\r\n        const a = filter.filter((el) => el !== name);\r\n        setFilter(a);\r\n      } else setFilter((filter) => [...filter, name]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery\">\r\n      <FilterBox handleClick={handleClick} />\r\n      <div className=\"cards-container\">\r\n        {isLoaded &&\r\n          (pokemons.length > 0\r\n            ? pokemons.map((el) => <PokeCard key={el.id} pokemon={el} />)\r\n            : data.map((el) => <PokeCard key={el.id} pokemon={el} />))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","export default __webpack_public_path__ + \"static/media/poketitle.48fb45fd.png\";","import React, { useState } from \"react\";\r\nimport poketitle from \"../assets/poketitle.png\";\r\n\r\nconst Header = () => {\r\n  const [styleBtnUp, setStyleBtnUp] = useState(\"none\");\r\n\r\n  const handleUp = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    window.scrollY < 350 ? setStyleBtnUp(\"none\") : setStyleBtnUp(\"block\");\r\n  });\r\n\r\n  return (\r\n    <header>\r\n      <img className=\"poketitle\" src={poketitle} alt=\"pokemon-logo\" />\r\n\r\n      <button\r\n        className=\"up-btn\"\r\n        style={{ display: styleBtnUp }}\r\n        onClick={handleUp}\r\n      >\r\n        UP\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        created by\r\n        <a href=\"https://joncat-portfolio.herokuapp.com/\">\r\n          <b> JonCat</b>\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Gallery from \"./components/Gallery\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Gallery />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}